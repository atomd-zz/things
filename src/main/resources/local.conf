akka {
  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  // log-config-on-start = on
}

akka.cluster {
  auto-down-unreachable-after = 2s

  failure-detector {
    acceptable-heartbeat-pause = 3 s # default 3 s
    threshold = 9.0    # default 8.0
  }

  scheduler {
    tick-duration = 9ms # default 33ms
    ticks-per-wheel = 512 # default 512
  }

  use-dispatcher = cluster-dispatcher
}

cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 4
  }
}

akka.scheduler {
  tick-duration = 10ms # default 10ms
  ticks-per-wheel = 512 # default 512
}

akka.io {
  tcp {
    nr-of-selectors = 2
    max-channels = unlimited
  }
}

akka.remote {
  log-remote-lifecycle-events = off

  transport-failure-detector {
    heartbeat-interval = 4 s   # default 4s
    acceptable-heartbeat-pause = 10 s  # default 10s
  }

  netty {
    server-socket-worker-pool {
      pool-size-min = 2 # default 2
      pool-size-factor = 1.0 # default 1.0
      pool-size-max = 24 # default 2
    }
  }
}

akka.contrib.cluster.pub-sub {
  gossip-interval = 1s  # default 1s
}

things {

  # "local" or "cluster"
  mode = "local"

  scheduler {
    tick-duration = 10 ms
    ticks-per-wheel = 512
  }

  akka.remote.use-dispatcher = "akka.remote.default-remote-dispatcher"
  aggregator-failure-detector {

    implementation-class = "akka.remote.DeadlineFailureDetector"

    heartbeat-interval = 5 s

    threshold = 10.1

    max-sample-size = 200

    min-std-deviation = 100 ms

    acceptable-heartbeat-pause = 12 s

    unreachable-nodes-reaper-interval = 5 s

    expected-response-after = 3 s
  }

  server {

    enable-notification = true

    enable-persistence = true

    heartbeat-interval = 30

    heartbeat-timeout = 60

    close-timeout = 60

    idle-timeout = 7200

    actor-selection-resolve-timeout = 10

    topic-subscribe-timeout = 31

    enable-connectionsession-persistence = false
  }

  seed-nodes = []

  routing-logic = "consistent-hashing"
}

//persistence {
//  journal.plugin = "akka.persistence.journal.leveldb-shared"
//  journal.leveldb-shared.store {
//    # DO NOT USE 'native = off' IN PRODUCTION !!!
//    native = off
//    dir = "target/shared-journal"
//  }
//  snapshot-store.local.dir = "target/snapshots"
//}
